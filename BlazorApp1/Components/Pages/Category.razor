@page "/category"
@using BlazorApp1.Components.Services
@using static BlazorApp1.Components.Pages.ThirdCategory
@using static BlazorApp1.Components.Pages.SecondCategory
@using static BlazorApp1.Components.Pages.FirstCategory
@rendermode InteractiveServer

@inject CategoryService CategoryService

<PageTitle>Category Management</PageTitle>

<FirstCategory 
    OnCategorySelected="HandleCategoryChange"
    OnRemoveSecondCategory="RemoveSecondCategory"
    SelectedCategory="@secondCategory"
    FirstCategoryViewModel = "@selectedCategory"
/>

<SecondCategory 
    OnSecondCategorySelected="HandleSecondCategoryChange" 
    OnRemoveThirdCategory="RemoveThirdCategory"
    SelectedCategory="@selectedCategory"
    ThirdCategory="@thirdCategory"
    SecondCategoryViewModel = "@secondCategory"
/>

<ThirdCategory
    OnThirdCategorySelected="HandleThirdCategoryChange" 
    FirstCategory="@selectedCategory"
    ThirdCategoryViewModel = "@thirdCategory"
/>

@code {
    protected override void OnInitialized()
    {
        selectedCategory = CategoryService.FirstCategory;
        secondCategory = CategoryService.SecondCategory;
        thirdCategory = CategoryService.ThirdCategory;
    }

    public List<FirstCategoryView> selectedCategory = new();
    public List<SecondCategoryView> secondCategory = new();
    public List<ThirdCategoryView> thirdCategory = new();

    public void HandleCategoryChange(List<FirstCategoryView> category)
    {
        selectedCategory = category;
    }

    public void HandleSecondCategoryChange(List<SecondCategoryView> category)
    {
        secondCategory = category;
    }
    public void HandleThirdCategoryChange(List<ThirdCategoryView> category)
    {
        thirdCategory = category;
    }

    public void RemoveSecondCategory(FirstCategoryView firstCategoryView)
    {
        foreach (var i in secondCategory)
        {
            RemoveThirdCategory(i);
        }

        secondCategory.RemoveAll(i => i.FirstCategory.Id == firstCategoryView.Id);
    }

    public void RemoveThirdCategory(SecondCategoryView secondCategoryView)
    {
        thirdCategory.RemoveAll(i => i.SecondCategory.Id == secondCategoryView.Id);
    }
}